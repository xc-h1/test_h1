name: Parallel Zip Bomb Extraction and Commit

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  unzip-and-commit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file_index: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]  # Run 10 parallel jobs

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Git user for committing
    - name: Set up Git user
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    # Step 3: Install p7zip for extraction
    - name: Install 7-Zip
      run: sudo apt-get install -y p7zip-full

    # Step 4: Extract and commit one file at a time (each parallel job handles one file)
    - name: Extract one file
      run: |
        ulimit -n 65535  # Increase file descriptors limit
        ulimit -v unlimited  # Allow unlimited virtual memory

        # List files and extract one based on the matrix index
        FILE=$(7z l zbbig2.zip | awk '{print $6}' | grep -E '^assets' | sed -n "$((matrix.file_index+1))p")
        echo "Extracting file: $FILE"
        7z x zbbig2.zip "$FILE" -oextracted_files || echo "Extraction failed"
        
        # Check if file exists after extraction
        if [ -f "extracted_files/$FILE" ]; then
          git add "extracted_files/$FILE"
          git commit -m "Add extracted file $FILE"
          git push || echo "Push failed"
          rm -f "extracted_files/$FILE"  # Delete the file after committing
        else
          echo "File $FILE was not extracted successfully"
        fi

    # Step 5: Add a delay between extractions to avoid race conditions
    - name: Sleep for 1 second
      run: sleep 1
