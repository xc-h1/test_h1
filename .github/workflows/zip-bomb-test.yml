name: Zip Bomb Upload Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  unzip-and-upload:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install unzip utility
      - name: Install unzip
        run: sudo apt-get install -y unzip

      # Step 3: List files in the ZIP
      - name: List files in ZIP
        id: list_files
        run: |
          if unzip -l zbbig2.zip > file_list.txt; then
            echo "Files listed successfully."
            cat file_list.txt
          else
            echo "Failed to list files in zip."
            exit 1
          fi

      # Step 4: Unzip and commit 10 files at a time
      - name: Unzip and commit 10 files at a time
        run: |
          # Initialize a counter
          counter=0
          batch_size=10
          file_batch=()

          # Process 10 files at a time
          while IFS= read -r line; do
            # Extract the file name from the line
            file=$(echo "$line" | awk '{print $NF}')

            # Only process files that start with 'assets/'
            if [[ $file == assets/* ]]; then
              echo "Preparing $file for extraction..."
              file_batch+=("$file")
              counter=$((counter + 1))

              # If we've collected 10 files, extract and commit them
              if [ $counter -eq $batch_size ]; then
                echo "Processing batch of 10 files: ${file_batch[*]}"

                # Extract the batch of 10 files
                unzip -o zbbig2.zip "${file_batch[@]}" || { echo "Failed to extract files"; exit 1; }

                # Commit and push each file in the batch
                for extracted_file in "${file_batch[@]}"; do
                  if [ -f "$extracted_file" ]; then
                    echo "Adding $extracted_file to Git"

                    # Set up Git user for committing
                    git config --global user.name 'github-actions[bot]'
                    git config --global user.email 'github-actions[bot]@users.noreply.github.com'

                    # Commit the file
                    git add "$extracted_file"
                    git commit -m "Add extracted file: $extracted_file"
                    git push || echo "Push failed for $extracted_file"

                    # Delete the file after pushing
                    rm "$extracted_file" || echo "Failed to delete $extracted_file"
                  else
                    echo "$extracted_file not found after extraction."
                  fi
                done

                # Reset for the next batch
                file_batch=()
                counter=0

                # Sleep for 1 second before processing the next batch
                sleep 1
              fi
            fi
          done < file_list.txt

          # Process remaining files if there are fewer than 10 left
          if [ ${#file_batch[@]} -gt 0 ]; then
            echo "Processing remaining files: ${file_batch[*]}"
            unzip -o zbbig2.zip "${file_batch[@]}" || { echo "Failed to extract remaining files"; exit 1; }

            for extracted_file in "${file_batch[@]}"; do
              if [ -f "$extracted_file" ]; then
                echo "Adding $extracted_file to Git"
                git add "$extracted_file"
                git commit -m "Add extracted file: $extracted_file"
                git push || echo "Push failed for $extracted_file"
                rm "$extracted_file" || echo "Failed to delete $extracted_file"
              else
                echo "$extracted_file not found after extraction."
              fi
            done
          fi

      # Step 5: Clean up
      - name: Clean up
        run: rm file_list.txt
